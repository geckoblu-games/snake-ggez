{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hello","title":"Introduction"},{"location":"00_projectsetup/","text":"Create a project To get started, make a new folder and initialize a Rust project with cargo init . If you don't have rust installed, install it with rustup . If you're on Linux rustup is probably already in your distro's repositories. After running cargo init , you should have a folder structure like this: . \u251c\u2500\u2500 Cargo.lock \u251c\u2500\u2500 Cargo.toml \u2514\u2500\u2500 src \u2514\u2500\u2500 main.rs Cargo.toml contains the manifest info for your Rust crate (crate is Rustacean for package). Mine looks like this: [package] name = \"snake-ggez\" version = \"0.1.0\" edition = \"2021\" # See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html [dependencies] The src/ directory is where all of your Rust code goes. main.rs comes with Hello World already written: fn main() { println!(\"Hello, world!\"); } Run cargo build to build your project, and cargo run to run it. If you just want to check for project for syntax and type errors, run cargo check . It's a lot faster than cargo build . ggez basics Adding ggez as a dependency is pretty simple. Just go to the dependencies section of your Cargo.toml and add ggez = \"0.8\" [package] name = \"snake-ggez\" version = \"0.1.0\" edition = \"2021\" # See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html [dependencies] ggez = \"0.8\" Run cargo build now to download and build ggez and all of its dependencies. It might take a few minutes. The behavior of the program hasn't actually changed at all yet. cargo run will still just output \"Hello,","title":"Project setup"},{"location":"00_projectsetup/#create-a-project","text":"To get started, make a new folder and initialize a Rust project with cargo init . If you don't have rust installed, install it with rustup . If you're on Linux rustup is probably already in your distro's repositories. After running cargo init , you should have a folder structure like this: . \u251c\u2500\u2500 Cargo.lock \u251c\u2500\u2500 Cargo.toml \u2514\u2500\u2500 src \u2514\u2500\u2500 main.rs Cargo.toml contains the manifest info for your Rust crate (crate is Rustacean for package). Mine looks like this: [package] name = \"snake-ggez\" version = \"0.1.0\" edition = \"2021\" # See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html [dependencies] The src/ directory is where all of your Rust code goes. main.rs comes with Hello World already written: fn main() { println!(\"Hello, world!\"); } Run cargo build to build your project, and cargo run to run it. If you just want to check for project for syntax and type errors, run cargo check . It's a lot faster than cargo build .","title":"Create a project"},{"location":"00_projectsetup/#ggez-basics","text":"Adding ggez as a dependency is pretty simple. Just go to the dependencies section of your Cargo.toml and add ggez = \"0.8\" [package] name = \"snake-ggez\" version = \"0.1.0\" edition = \"2021\" # See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html [dependencies] ggez = \"0.8\" Run cargo build now to download and build ggez and all of its dependencies. It might take a few minutes. The behavior of the program hasn't actually changed at all yet. cargo run will still just output \"Hello,","title":"ggez basics"}]}